sources:
    osm:
        type: TopoJSON
        url:  //vector.mapzen.com/osm/all/{z}/{x}/{y}.topojson?api_key=vector-tiles-P6dkVl4
cameras:
    perspective:
        
        type: flat
        
styles:
    geometry-projection:
        shaders:
            defines:
                EARTH_RADIUS: 6378137.0
                deg2rad(d): (((d)*3.14159265358979323846)/180.0)
                rad2deg(d): (((d)*180.0)/3.14159265358979323846)
            blocks:
                global: |
                    //
                    // The following functions take or return there results in degrees
                    //
                    float y2lat_d (float y) { return rad2deg(2.0 * atan(exp( deg2rad(y) ) ) - 1.570796327); }
                    float x2lon_d (float x) { return x; }
                    float lat2y_d (float lat) { return rad2deg(log(tan(.785398163+ deg2rad(lat)/2.0))); }
                    float lon2x_d (float lon) { return lon; }
                    //
                    // The following functions take or return there results in something close to meters, along the equator 
                    //
                    float y2lat_m (float y) { return rad2deg(2.0 * atan(exp( (y / EARTH_RADIUS ) )) - 1.570796327); }
                    float x2lon_m (float x) { return rad2deg(x / EARTH_RADIUS); }
                    float lat2y_m (float lat) { return EARTH_RADIUS * log(tan(.785398163+ deg2rad(lat)/2.0)); }
                    float lon2x_m (float lon) { return deg2rad(lon) * EARTH_RADIUS; }
    clouds:
        base: polygons
        mix: geometry-projection
        shaders:
            uniforms:
                u_map: imgs/earth-clouds.jpg
            blocks:
                color: |
                    vec2 st = v_world_position.xy;
                    vec2 pos = vec2(y2lat_m(st.y),y2lat_m(st.x));
                    pos /= vec2(90.,180.);
                    pos += 1.0;
                    pos *= .5;
                    color.rgb += texture2D(u_map,pos).r;
                    
                
layers:
    earth:
        data: { source: osm }
        draw:
            clouds:
                order: 0
                color: '#555'
    water:
        data: { source: osm }
        draw:
            clouds:
                order: 1
                color: '#ddd'