# Author @patriciogv - 2015

import:
    - http://tangrams.github.io/blocks/color/tools.yaml
    - http://tangrams.github.io/blocks/generative/noise.yaml
    - http://tangrams.github.io/blocks/geometry/matrices.yaml

sources:
    osm:
        type: TopoJSON
        url:  https://vector.mapzen.com/osm/all/{z}/{x}/{y}.topojson?api_key=vector-tiles-JUsa0Gc

textures:
    sem: 
        url: imgs/sem-sky-0001.jpg
    sand:
        url: imgs/normal-0015.jpg
    wood:
        url: imgs/normal-0021.jpg

cameras:
    cam:
        type: perspective
        focal_length: [[16, 2], [20, 6]]
        vanishing_point: [-250, -250]

lights:
    dir:
        type: directional
        direction: [0, 1, -.5]
        diffuse: .5
        ambient: .2
    pnt:
        type: point
        position: [0, 0, 500px]
        origin: ground
        ambient: .3
        diffuse: .5
        specular: .2

global:
    order: function () { return feature.sort_key; }

layers:
    earth:
        data: { source: osm }
        draw:
            earth:
                order: global.order
                color: [0.933,0.890,0.839]
    landuse:
        data:
            source: osm
            layer: landuse
        draw:
            landuse:
                order: global.order
                color: [0.902,0.843,0.757]

    water:
        data: { source: osm }
        draw:
            water:
                order: global.order
                color: '#88bbee'

    roads:
        data: { source: osm }
        filter: { not: { kind: [rail, ferry] } }
        draw:
            roads:
                order: global.order
                color: [0.710,0.686,0.647]
                width: 8
            text:
                font:
                    family: Helvetica
                    size: 14px
                    fill: [1.000,0.968,0.968]
                    stroke: { color: [0.204,0.204,0.204] , width: 3 }
        highway:
            filter:
                kind: highway
            draw:
                roads:
                    color: [0.784,0.765,0.729]
                    width: 12
        tunnel:
            filter:
                is_tunnel: yes
            draw:
                roads:
                    color: tan
        minor_road:
            filter:
                kind: minor_road
            draw:
                roads:
                    color: lightgrey
                    width: 5
        path:
            filter:
                kind: path
            draw:
                roads:
                    color: [0.8, 0.8, 0.8]
                    width: 3

    buildings:
        data: { source: osm }
        draw:
            buildings:
                order: global.order
                color: Style.color.pseudoRandomColor
                extrude: true
    places:
        data: { source: osm }
        filter: { name: true }
        draw:
            text:
                order: global.order
                font:
                    typeface: 18px Helvetica
                    fill: [0.204,0.204,0.204]
                    stroke: { color: white , width: 4 }


styles:
    water:
        base: polygons
        mix: [generative-noise]
        animated: true
        material:
            ambient: .7
            diffuse:
                texture: sem
                mapping: spheremap
        shaders:
            blocks:
                normal: |
                    normal += snoise(vec3(worldPosition().xy*0.08,u_time*.5))*0.02;
    roads:
        base: lines
        mix: [generative-noise]
        texcoords: true
        material:
            normal:
                texture: sand
                mapping: planar
                scale: 0.01
            ambient: 1.8
            diffuse: [0.933,0.890,0.839]
            specular: 1.0
        shaders:
            blocks:
                normal: |
                    float pct = sin(v_texcoord.x*3.1415);
                    vec3 waterNormal = v_normal + snoise(vec3(worldPosition().xy*0.1,u_time*.5));
                    normal = mix(normal, waterNormal, pct );
                color: |
                    color.rgb = mix(vec3(.6), vec3(0.400,0.576,0.718), pow(pct,2.));
    earth:
        base: polygons
        material:
            normal:
                texture: sand
                mapping: planar
                scale: 0.01
            ambient: 0.8
            diffuse: 1
            specular: 0
    landuse:
        base: polygons
        mix: earth
    buildings:
        base: polygons
        mix: [generative-noise, geometry-matrices]
        material:
            normal:
                texture: wood
                mapping: uv
            ambient: 0.8
            diffuse: 1
            specular: 0
        shaders:
            blocks:
                global: |
                    float getHatch(in vec2 _pos, float _angle, float _brigtness){
                        float scale = 20.0;
                        _pos *= scale;
                        _pos = rotate2D(_angle) * _pos;
                        return smoothstep(0.0,0.5+_brigtness*0.5,abs((sin(_pos.x*3.1415)+_brigtness*2.0))*0.5);//smoothstep(-1.+_brigtness*2.0,1.,abs(sin(_pos.x*3.1415)));
                    }
                color: |
                    vec3 pos = worldPosition().xyz*0.01;
                    float pattern = getHatch( color.br*20.0+pos.xy+noise(pos.xy)*(2.0*(1.0-color.g)),color.r, noise(color.rg*10.0+v_texcoord) );

                    color.rgb = vec3( mix(vec3(color.r*0.25,color.g*0.133,color.g*0.063), vec3(0.578,0.351,0.171)+color.r,pattern) );
                    color.rgb = mix(vec3(0.2+color.r*0.5,0.1+color.g*0.15,color.b*0.2)*1.5,color.rgb,smoothstep(0.0,color.g,pattern));
