cameras:
    perspective:
        type: perspective
        vanishing_point: [0, -500]
lights:
    directional1:
        type: directional
        direction: [.1, .5, -1]
        diffuse: .7
        ambient: .5
styles:
    tilt:
        animated: true
        base: polygons
        shaders:
            blocks:
                global: |
                    mat3 rotateX3D(float phi){
                        return mat3(
                            vec3(1.,0.,0.),
                            vec3(0.,cos(phi),-sin(phi)),
                            vec3(0.,sin(phi),cos(phi)));
                    }
                    mat3 rotateZ3D(float psi){
                        return mat3(
                            vec3(cos(psi),-sin(psi),0.),
                            vec3(sin(psi),cos(psi),0.),
                            vec3(0.,0.,1.));
                    }
                position: |
                    float t = u_time*0.05; 
                    position.xyz = rotateX3D(abs(cos(t))) * rotateZ3D(abs(sin(t))*.5) * position.xyz;
    pol:
        base: polygons
        mix: tilt
    lin:
        base: lines
        mix: tilt
    buildings:
        base: polygons
        mix: pol
        shaders:
            blocks:
                color: |
                    color.rgb *= vec3(min((v_world_position.z*.001 + .5),1.));
sources:
    osm:
        type: TopoJSON
        url:  //vector.mapzen.com/osm/all/{z}/{x}/{y}.topojson?api_key=vector-tiles-JUsa0Gc
layers:
    water:
        data: { source: osm }
        draw:
            pol:
                order: 2
                color: '#353535'
    earth:
        data: { source: osm }
        draw:
            pol:
                order: 0
                color: '#555'
    landuse:
        data: { source: osm }
        draw:
            pol:
                order: 1
                color: '#666'
    roads:
        data: { source: osm }
        filter: { not: { kind: [rail, ferry] } }
        properties: { width: 3 }
        draw:
            lin:
                order: 3
                color: '#777'
                width: 5
    buildings:
        data: { source: osm }
        filter: { $zoom: { min: 14 } }
        draw:
            pol:
                order: 50
                color: '#999'
        extruded:
            filter: { $zoom: { min: 15 } }
            draw:
                pol:
                    style: buildings
                    extrude: function () { return feature.height > 0 || $zoom >= 16; }